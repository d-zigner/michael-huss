{"version":3,"sources":["Navigation/ProfessionalExperience.js","Navigation.js","Footer.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["ProfessionalExperience","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","dropdownOpen","setState","prevState","react_default","a","createElement","Dropdown","isOpen","DropdownToggle","className","caret","DropdownMenu","DropdownItem","Component","Navigation","Navbar","color","NavbarBrand","alt","src","NavbarToggler","onClick","Collapse","navbar","NavLink","href","Navigation_ProfessionalExperience","Footer","Main","Jumbotron","id","class","style","fontSize","src_Footer","App","src_Navigation_0","src_Main_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5700d490.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\n\r\nclass ProfessionalExperience extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n        <DropdownToggle className=\"btn-dark\" caret>\r\n          Professional Experience\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          <DropdownItem>Senior Writing Seminar</DropdownItem>\r\n          <DropdownItem>Biology Course Work</DropdownItem>\r\n          <DropdownItem>Osteology Internship</DropdownItem>\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfessionalExperience;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavLink,\r\n  Collapse\r\n} from \"reactstrap\";\r\nimport ProfessionalExperience from \"./Navigation/ProfessionalExperience\";\r\nimport \"./Navigation.css\";\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Navbar color=\"dark\" className=\"navbar-dark navbar-expand-md\">\r\n        <NavbarBrand className=\"mr-4\">\r\n          <img\r\n            className=\"brandLogo mr-3\"\r\n            alt=\"Portrait\"\r\n            src=\"./brandLogo.webp\"\r\n          />\r\n          <span className=\"text-light\">Michael Huss</span>\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={this.toggle} />\r\n\r\n        <Collapse isOpen={this.state.isOpen} navbar>\r\n          <NavLink className=\"text-light\" href=\"/\">\r\n            Home\r\n          </NavLink>\r\n          <ProfessionalExperience />\r\n          <NavLink className=\"text-light\" href=\"/\">\r\n            Resume\r\n          </NavLink>\r\n          <NavLink className=\"text-light\" href=\"/\">\r\n            Extracurriculars\r\n          </NavLink>\r\n          <NavLink className=\"text-light\" href=\"/\">\r\n            Contact\r\n          </NavLink>\r\n        </Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return <footer className=\"pt-4 border-top\" />;\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Jumbotron } from \"reactstrap\";\r\nimport Footer from \"./Footer\";\r\nimport \"./Main.css\";\r\n\r\nclass Main extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron id=\"mainJumbotron\">\r\n          <div className=\"d-flex\">\r\n            <div className=\" ml-4 flex-grow-1\">\r\n              <h1 class=\"display-2\">Michael Huss</h1>\r\n              <h1 class=\"display-4\" style={{ fontSize: \"2rem\" }}>\r\n                Biology Student\r\n              </h1>\r\n            </div>\r\n            <img\r\n              src=\"./jumbotron.svg\"\r\n              alt=\"Science Rules\"\r\n              className=\"mr-4 jumboLogo\"\r\n            />\r\n          </div>\r\n        </Jumbotron>\r\n        <div\r\n          className=\"mb-4 ml-auto mr-auto col-md-6 text-left\"\r\n          style={{ fontSize: \"1.6rem\" }}\r\n        >\r\n          I am a currently a student at <em>Old Dominion University</em>,\r\n          graduating with a Bachelors in Biological Studies in 2019.\r\n          <p />\r\n          During my time at Old Dominion University I dedicated most of my time\r\n          to the study of Human Anatomy and related biological sciences.\r\n          <p />I plan to continue my studies by enrolling into medical school\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navigation from \"./Navigation.js\";\nimport Main from \"./Main.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Main />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}